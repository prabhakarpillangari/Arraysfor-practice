class Solution {
    public int[] runningSum(int[] nums) {
        for(int i=1;i<nums.length;i++)
        {
            nums[i]=nums[i-1]+nums[i];
        }
        return nums;
    }
}

//
/*
 In each iteration of the loop, the value at index `i` is updated to be the sum of the previous value at index `i-1` and the current value at index `i`. The correct expression is `nums[i] = nums[i - 1] + nums[i]`.

Let's go through an example to illustrate this process:

Suppose the input array `nums` is [1, 2, 3, 4, 5]. Here's how the running sum is calculated step by step:

1. Iteration 1:
   - `i = 1`
   - `nums[1] = nums[0] + nums[1] = 1 + 2 = 3`
   - Updated `nums` array: [1, 3, 3, 4, 5]

2. Iteration 2:
   - `i = 2`
   - `nums[2] = nums[1] + nums[2] = 3 + 3 = 6`
   - Updated `nums` array: [1, 3, 6, 4, 5]

3. Iteration 3:
   - `i = 3`
   - `nums[3] = nums[2] + nums[3] = 6 + 4 = 10`
   - Updated `nums` array: [1, 3, 6, 10, 5]

4. Iteration 4:
   - `i = 4`
   - `nums[4] = nums[3] + nums[4] = 10 + 5 = 15`
   - Updated `nums` array: [1, 3, 6, 10, 15]

After completing all iterations, the resulting `nums` array will contain the running sum: [1, 3, 6, 10, 15], which is the expected output.

*/
